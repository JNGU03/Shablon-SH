public class Author {
    private String name;
    private String email;

    public Author(String name, String email) {
        this.name = name;
        this.email = email;
    }

    public String getName() {
        return name;
    }

    public String getEmail() {
        return email;
    }
}

import java.util.List;

public class Book {
    private String title;
    private String isbn;
    private List<Author> authors;
    private int publicationYear;
    private boolean isAvailable;

    public Book(String title, String isbn, List<Author> authors, int publicationYear) {
        this.title = title;
        this.isbn = isbn;
        this.authors = authors;
        this.publicationYear = publicationYear;
        this.isAvailable = true;
    }

    public String getTitle() {
        return title;
    }

    public boolean isAvailable() {
        return isAvailable;
    }

    public void changeAvailabilityStatus() {
        this.isAvailable = !isAvailable;
    }

    public String getBookInfo() {
        return String.format("Title: %s, ISBN: %s, Year: %d, Available: %b", title, isbn, publicationYear, isAvailable);
    }
}

public abstract class User {
    protected int id;
    protected String name;
    protected String email;

    public User(int id, String name, String email) {
        this.id = id;
        this.name = name;
        this.email = email;
    }

    public abstract void register();
    public abstract void login();
}

public class Reader extends User {
    public Reader(int id, String name, String email) {
        super(id, name, email);
    }

    @Override
    public void register() {
        System.out.println("Reader " + name + " registered.");
    }

    @Override
    public void login() {
        System.out.println("Reader " + name + " logged in.");
    }

    public void borrowBook(Book book) {
        if (book.isAvailable()) {
            book.changeAvailabilityStatus();
            System.out.println(name + " borrowed the book: " + book.getTitle());
        } else {
            System.out.println("Book is not available.");
        }
    }

    public void returnBook(Book book) {
        book.changeAvailabilityStatus();
        System.out.println(name + " returned the book: " + book.getTitle());
    }
}

public class Librarian extends User {
    public Librarian(int id, String name, String email) {
        super(id, name, email);
    }

    @Override
    public void register() {
        System.out.println("Librarian " + name + " registered.");
    }

    @Override
    public void login() {
        System.out.println("Librarian " + name + " logged in.");
    }

    public void addBook(Book book) {
        System.out.println("Book added: " + book.getTitle());
    }

    public void removeBook(Book book) {
        System.out.println("Book removed: " + book.getTitle());
    }
}

import java.util.Date;

public class Loan {
    private Book book;
    private Reader reader;
    private Date loanDate;
    private Date returnDate;

    public Loan(Book book, Reader reader) {
        this.book = book;
        this.reader = reader;
        this.loanDate = new Date();
    }

    public void issueLoan() {
        System.out.println("Loan issued: " + book.getTitle() + " to " + reader.name);
    }

    public void returnBook() {
        this.returnDate = new Date();
        book.changeAvailabilityStatus();
        System.out.println("Book returned: " + book.getTitle() + " by " + reader.name);
    }
}

import java.util.ArrayList;
import java.util.List;

public class Library {
    private List<Book> books = new ArrayList<>();
    private List<User> users = new ArrayList<>();
    private List<Loan> loans = new ArrayList<>();

    public void addBook(Book book) {
        books.add(book);
    }

    public void addUser(User user) {
        users.add(user);
    }

    public Book searchBook(String title) {
        for (Book book : books) {
            if (book.getTitle().equalsIgnoreCase(title)) {
                return book;
            }
        }
        return null;
    }

    public void generateReport() {
        System.out.println("Library Report:");
        System.out.println("Total Books: " + books.size());
        System.out.println("Total Users: " + users.size());
        System.out.println("Total Loans: " + loans.size());
    }
}
import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        Library library = new Library();

        Author author = new Author("J.K. Rowling", "jk.rowling@example.com");
        Book book = new Book("Harry Potter", "123-456", Arrays.asList(author), 1997);

        Reader reader = new Reader(1, "John Doe", "john.doe@example.com");
        Librarian librarian = new Librarian(2, "Mary Poppins", "mary.poppins@example.com");

        library.addBook(book);
        library.addUser(reader);
        library.addUser(librarian);

        reader.register();
        librarian.register();

        librarian.addBook(book);

        reader.borrowBook(book);

        Loan loan = new Loan(book, reader);
        loan.issueLoan();

        loan.returnBook();

        library.generateReport();
    }
}
